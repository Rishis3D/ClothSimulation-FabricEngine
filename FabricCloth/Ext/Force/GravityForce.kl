/// \version 1.0
/// \file GravityForce.kl
///
/// \brief Apply a constant force in a certain direction.
///
/// \author Tom Minor, NCCA, Bournemouth University
/// \date 09/05/16
///

require Geometry;

/// \dfgPresetFolder  Forces
object GravityForce : BaseForce
{
	Vec3 g;
};

/// \dfgPresetFolder Forces
function GravityForce( Vec3 _g )
{
	this.g = _g;
}

/// \dfgPresetFolder Forces
function GravityForce( )
{
	this.g = Vec3(0, 9.8, 0);
}

/// \dfgPresetFolder Forces
/// \internal
function GravityForce.initialise!()
{
	// Empty
}

function GravityForce.update!()
{
	// Empty
}

/// \dfgPresetFolder Forces
/// \internal
function GravityForce.apply!(io Ref<GeometryAttributes> attrs)
{
	Vec3Attribute velocities = attrs.getOrCreateVec3Attribute('velocities');
  	IntegerAttribute movable = attrs.getOrCreateIntegerAttribute('movable');
  	
  	// Update in parallel
  	applyGravity<<<velocities.values.size()>>>(velocities.values, movable.values, this.g );

  	// Mark velocities as modified
	velocities.incrementVersion();
}

/**
 * @brief      Apply a constant force in the direction of g in parallel
 *
 * @param      index       Point index
 * @param      velocities  Velocities list
 * @param      movable     Movable points list
 * @param      g           Gravity force
 *
 */
operator applyGravity<<<index>>>( 
				io Vec3 velocities[],
  				Integer movable[],
  				Vec3 g
  				)
{
	Float32 TIME_STEPSIZE2 = 0.5*0.5;

	// Pin immovable vertices
  	// if( movable[index] )
	{
		velocities[index] += g * TIME_STEPSIZE2;
	}
}