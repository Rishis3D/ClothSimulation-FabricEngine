[FABRIC:MT] Fabric Engine version 2.1.0
[FABRIC:MT] Loading DFG presets from /home/i7245143/src/FabricEngine-2.1.0-Linux-x86_64/Presets/DFG
[FABRIC:MT] Loading DFG presets from /home/i7245143/src/agsdt-TomMinor/FabricCloth/Ext/DFG
[FABRIC:MT] Loading DFG presets from /home/i7245143/Fabric/Presets
[FABRIC:MT] Registered extension {TestExt} in directory: /home/i7245143/Documents/Fabric/TestExt
[FABRIC:MT] Registered extension {ParticleSystem} in directory: /home/i7245143/src/FabricCPS/Ext
[FABRIC:MT] Registered extensions {Math:1.3.0,AttributeHelpers:1.0.0,Manipulation:1.1.0,Images:1.0.2,DFGWrapper:1.1.0,FabricOBJ:1.1.0,OSOGL:1.1.0,Parameters:1.0.0,Animation:1.1.0,FabricSynchronization:1.1.0,Util:1.2.0,FabricStatistics:1.1.0,Bullet:1.0.1,OpenImageIO:1.0.2,BulletHelpers:1.0.0,FabricOGL:1.1.0,Characters:1.1.0,Alembic:1.0.0,DFGHelpers,FabricInterfaces:1.0.1,FileIO:1.2.0,Singletons:1.1.0,InlineDrawing:1.3.0,AlembicWrapper:1.3.0,JSON:1.0.0,Fbx:1.1.0,Containers:1.1.0,Geometry:1.3.0,FbxHelpers:1.0.2} in directory: /home/i7245143/src/FabricEngine-2.1.0-Linux-x86_64/Exts
[FABRIC:MT] Ignored extension directory '/home/i7245143/src/FabricEngine-2.1.0-Linux-x86_64/Tests/Exts': unable to open directory '/home/i7245143/src/FabricEngine-2.1.0-Linux-x86_64/Tests/Exts': No such file or directory (code 2 [0x2])
[FABRIC:MT] IRCache: Not pruning since last prune was less than 24 hours ago
[FABRIC:MT] Loaded extension Math in 93.044ms (cached)
[FABRIC:MT] Loaded extension FabricSynchronization in 23.126ms (cached)
[FABRIC:MT] Loaded extension FabricStatistics in 37.365ms (cached)
[FABRIC:MT] Loaded extension Singletons in 17.951ms (cached)
[FABRIC:MT] Loaded extension Util in 44.492ms (cached)
[FABRIC:MT] Loaded extension Containers in 314.418ms (cached)
[FABRIC:MT] Loaded extension Geometry in 382.426ms (cached)
[FABRIC:MT] Loaded extension ClothSimulation in 1221.733ms (first time)
registerFunction: thisType='VerletIntergrator' func='function VerletIntergrator?()'
  Added to bin[normal][VerletIntergrator]
registerFunction: thisType='VerletIntergrator' func='function VerletIntergrator.initialise!()'
  Added to bin[normal][VerletIntergrator.initialise]
registerFunction: thisType='SpringConstraint' func='function SpringConstraint?()'
  Added to bin[normal][SpringConstraint]
registerFunction: thisType='GravityForce' func='function GravityForce?( in Vec3 _g )'
  Added to bin[normal][GravityForce]
registerFunction: thisType='GravityForce' func='function GravityForce?()'
  Added to bin[normal][GravityForce]
registerFunction: thisType='GravityForce' func='function GravityForce.apply!( io Ref<GeometryAttributes> attrs )'
  Added to bin[normal][GravityForce.apply]
registerFunction: thisType='TurbulentForce' func='function TurbulentForce?( in Vec3 _center, in Float32 _amplitude, in Vec3 _frequency )'
  Added to bin[normal][TurbulentForce]
registerFunction: thisType='TurbulentForce' func='function TurbulentForce.apply!( io Ref<GeometryAttributes> attrs )'
  Added to bin[normal][TurbulentForce.apply]
registerFunction: thisType='ClothSimulation' func='function ClothSimulation?( in PolygonMesh _mesh, in BaseForce _forceStack[], in BaseConstraint _constraintStack[], in BaseIntegrator _integrator, in UInt32 _rows, in UInt32 _cols )'
  Added to bin[normal][ClothSimulation]
registerFunction: thisType='ClothSimulation' func='function Vec3[] ClothSimulation.getAllPoints?()'
  Added to bin[normal][Vec3[] ClothSimulation.getAllPoints]
registerFunction: thisType='ClothSimulation' func='function PolygonMesh ClothSimulation.getMesh?()'
  Added to bin[normal][PolygonMesh ClothSimulation.getMesh]
registerFunction: thisType='ClothSimulation' func='function ClothSimulation.stepSimulation!()'
  Added to bin[normal][ClothSimulation.stepSimulation]
registerFunction: thisType='VerletIntergrator' func='function VerletIntergrator?()'
registerFunction: thisType='VerletIntergrator' func='function VerletIntergrator.initialise!()'
registerFunction: thisType='VerletIntergrator' func='function VerletIntergrator.apply!( io Ref<GeometryAttributes> attributes )'
  Skipped: isInternal()
registerFunction: thisType='SpringConstraint' func='function SpringConstraint?()'
registerFunction: thisType='SpringConstraint' func='function SpringConstraint.solve!( io Ref<GeometryAttributes> attrs, in UInt32 _rows, in UInt32 _cols )'
  Skipped: isInternal()
registerFunction: thisType='GravityForce' func='function GravityForce?( in Vec3 _g )'
registerFunction: thisType='GravityForce' func='function GravityForce?()'
registerFunction: thisType='GravityForce' func='function GravityForce.initialise!()'
  Skipped: isInternal()
registerFunction: thisType='GravityForce' func='function GravityForce.apply!( io Ref<GeometryAttributes> attrs )'
registerFunction: thisType='TurbulentForce' func='function TurbulentForce?( in Vec3 _center, in Float32 _amplitude, in Vec3 _frequency )'
registerFunction: thisType='TurbulentForce' func='function TurbulentForce.initialise!()'
  Skipped: isInternal()
registerFunction: thisType='TurbulentForce' func='function TurbulentForce.apply!( io Ref<GeometryAttributes> attrs )'
registerFunction: thisType='ClothSimulation' func='function ClothSimulation?( in PolygonMesh _mesh, in BaseForce _forceStack[], in BaseConstraint _constraintStack[], in BaseIntegrator _integrator, in UInt32 _rows, in UInt32 _cols )'
registerFunction: thisType='ClothSimulation' func='function ClothSimulation.stepSimulation!()'
registerFunction: thisType='ClothSimulation' func='function Vec3[] ClothSimulation.getAllPoints?()'
registerFunction: thisType='ClothSimulation' func='function PolygonMesh ClothSimulation.getMesh?()'
processFunctions
  bin[normal][VerletIntergrator][0] (asArray=false)
    thisType='VerletIntergrator' code='function VerletIntergrator?()'
  bin[normal][VerletIntergrator.initialise][0] (asArray=false)
    thisType='VerletIntergrator' code='function VerletIntergrator.initialise!()'
  bin[normal][SpringConstraint][0] (asArray=false)
    thisType='SpringConstraint' code='function SpringConstraint?()'
  bin[normal][GravityForce][1] (asArray=false)
    thisType='GravityForce' code='function GravityForce?( in Vec3 _g )'
  bin[normal][GravityForce.apply][1] (asArray=false)
    thisType='GravityForce' code='function GravityForce.apply!( io Ref<GeometryAttributes> attrs )'
  bin[normal][TurbulentForce][3] (asArray=false)
    thisType='TurbulentForce' code='function TurbulentForce?( in Vec3 _center, in Float32 _amplitude, in Vec3 _frequency )'
  bin[normal][TurbulentForce.apply][1] (asArray=false)
    thisType='TurbulentForce' code='function TurbulentForce.apply!( io Ref<GeometryAttributes> attrs )'
  bin[normal][ClothSimulation][6] (asArray=false)
    thisType='ClothSimulation' code='function ClothSimulation?( in PolygonMesh _mesh, in BaseForce _forceStack[], in BaseConstraint _constraintStack[], in BaseIntegrator _integrator, in UInt32 _rows, in UInt32 _cols )'
  bin[normal][Vec3[] ClothSimulation.getAllPoints][0] (asArray=false)
    thisType='ClothSimulation' code='function Vec3[] ClothSimulation.getAllPoints?()'
  bin[normal][PolygonMesh ClothSimulation.getMesh][0] (asArray=false)
    thisType='ClothSimulation' code='function PolygonMesh ClothSimulation.getMesh?()'
  bin[normal][ClothSimulation.stepSimulation][0] (asArray=false)
    thisType='ClothSimulation' code='function ClothSimulation.stepSimulation!()'
